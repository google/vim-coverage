This file demonstrates the basics of coverage usage.

In order for these tests to work, maktaba MUST be in the same parent directory
as coverage. Given that that's the case, all we have to do is source the
setupvroom.vim file, which bootstraps the coverage plugin and configures it to
work properly under vroom.

  :let g:repo = fnamemodify($VROOMFILE, ':p:h:h:h')
  :source $VROOMDIR/setupvroom.vim

The coverage plugin provides a :CoverageShow command that calls the coverage
provider and renders the coverage, if available. Let's first create and register
a fake coverage provider.

  :let g:thisdir = fnamemodify($VROOMFILE, ':p:h')
  :let g:repo = maktaba#path#Join([g:thisdir, 'fakeplugins'])
  :let g:pluginpath = maktaba#path#Join([g:repo, 'myplugin'])
  :let g:plugin = maktaba#plugin#Install(g:pluginpath)

  :function TestIsAvailable(file)
  : return a:file =~# '.*dummy.py'
  :endfunction

  :let g:next_covered = 13
  :let g:covered = [1, 3, 5, 7, 9, 11]

  :function TestGetCoverage(file)
  : let g:covered = add(g:covered, g:next_covered)
  : let g:next_covered += 2
  : return {'covered': g:covered,
  |     'uncovered': [2, 4, 6, 8, 10, 12, 14],
  |     'partial': []}
  :endfunction

  :let g:registry = maktaba#extension#GetRegistry('coverage')
  :call g:registry.AddExtension({
  |      'name': 'test_coverage_provider',
  |      'GetCoverage': function('TestGetCoverage'),
  |      'IsAvailable': function('TestIsAvailable')})

  :silent edit $VROOMDIR/testdata/dummy.py

Let's start with a simple test that shows that CoverageShow works.

  :CoverageShow test_coverage_provider
  ~ Coverage is 50.00% (7/14 lines).

If we call it again, the result should be the same (because of the cache).

  :CoverageShow
  :CoverageStats
  ~ Coverage is 50.00% (7/14 lines).

If we use a bang, the cache should be ignored, and the result should change
(TestGetCoverage should be called again, which adds another covered line to the
list).

  :CoverageShow!
  ~ Coverage is 53.33% (8/15 lines).

Users should also be able to toggle coverage, which should cache the coverage
while it's hidden:
  :CoverageToggle
  :CoverageToggle
  :CoverageStats
  ~ Coverage is 53.33% (8/15 lines).

However, toggled coverage should not be cached if a bang is used:
  :CoverageToggle
  :CoverageToggle!
  ~ Coverage is 56.25% (9/16 lines).

Finally, let's make sure that calling unrecognized providers fails gracefully:

  :silent file foo.unrecognized
  :CoverageShow test_coverage_provider
  ~ Error rendering coverage: ERROR\(NotFound\): Provider (regex)
  | test_coverage_provider is not available for file .*foo.unrecognized
